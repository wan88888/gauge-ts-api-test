name: API Testing Framework CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
      
      # 检查是否有Gauge缓存
      - name: Cache Gauge
        uses: actions/cache@v3
        with:
          path: ~/.gauge
          key: ${{ runner.os }}-gauge-${{ hashFiles('**/*.json') }}
          restore-keys: |
            ${{ runner.os }}-gauge-

      - name: Install Gauge
        run: |
          curl -SsL https://downloads.gauge.org/stable | sh
          gauge --version
          gauge install ts
          gauge telemetry off
          gauge install html-report

      # 使用npm ci而不是npm install，以确保使用package-lock.json
      - name: Install dependencies
        run: npm ci

      # 检查代码风格和质量
      - name: Check code style and linting
        run: |
          npm install -g typescript
          tsc --noEmit

      # 构建项目
      - name: Build project
        run: npm run build

      # 在运行API测试前检查API是否可用
      - name: Check API availability
        run: |
          curl -s -o /dev/null -w "%{http_code}" https://jsonplaceholder.typicode.com/posts/1 | grep 200
        continue-on-error: true

      # 运行API测试
      - name: Run API tests
        run: npm run test:api
        env:
          API_BASE_URL: https://jsonplaceholder.typicode.com
          TIMEOUT: 30000
          RETRY_ATTEMPTS: 3
          RETRY_DELAY: 1000
          LOGGING_ENABLED: true
          LOGGING_LEVEL: info
          TEST_TIMEOUT: 60000

      # 即使测试失败也上传测试报告
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: gauge-test-reports
          path: reports/
          retention-days: 5